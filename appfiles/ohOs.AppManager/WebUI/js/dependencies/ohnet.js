var CpProxyOpenhomeOrgSubscriptionLongPoll1=function(a){this.url=window.location.protocol+"//"+window.location.host+"/"+a+"/openhome.org-SubscriptionLongPoll-1/control";this.domain="openhome-org";this.type="SubscriptionLongPoll";this.version="1";this.serviceName="openhome.org-SubscriptionLongPoll-1";this.subscriptionId="";this.udn=a;this.serviceProperties={}};CpProxyOpenhomeOrgSubscriptionLongPoll1.prototype.subscribe=function(a){ohnet.subscriptionmanager.addService(this,a)};CpProxyOpenhomeOrgSubscriptionLongPoll1.prototype.unsubscribe=function(){ohnet.subscriptionmanager.removeService(this.subscriptionId)};CpProxyOpenhomeOrgSubscriptionLongPoll1.prototype.Subscribe=function(a,g,e,d,f,b){var c=new ohnet.soaprequest("Subscribe",this.url,this.domain,this.type,this.version);c.writeStringParameter("ClientId",a);c.writeStringParameter("Udn",g);c.writeStringParameter("Service",e);c.writeIntParameter("RequestedDuration",d);c.send(function(h){h.Sid=ohnet.soaprequest.readStringParameter(h.Sid);h.Duration=ohnet.soaprequest.readIntParameter(h.Duration);if(f){f(h)}},function(h,i){if(b){b(h,i)}})};CpProxyOpenhomeOrgSubscriptionLongPoll1.prototype.Unsubscribe=function(c,d,a){var b=new ohnet.soaprequest("Unsubscribe",this.url,this.domain,this.type,this.version);b.writeStringParameter("Sid",c);b.send(function(e){if(d){d(e)}},function(e,f){if(a){a(e,f)}})};CpProxyOpenhomeOrgSubscriptionLongPoll1.prototype.Renew=function(d,c,e,a){var b=new ohnet.soaprequest("Renew",this.url,this.domain,this.type,this.version);b.writeStringParameter("Sid",d);b.writeIntParameter("RequestedDuration",c);b.send(function(f){f.Duration=ohnet.soaprequest.readIntParameter(f.Duration);if(e){e(f)}},function(f,g){if(a){a(f,g)}})};CpProxyOpenhomeOrgSubscriptionLongPoll1.prototype.GetPropertyUpdates=function(a,d,b){var c=new ohnet.soaprequest("GetPropertyUpdates",this.url,this.domain,this.type,this.version);c.writeStringParameter("ClientId",a);c.send(function(e){e.Updates=ohnet.soaprequest.readStringParameter(e.Updates);if(d){d(e)}},function(e,f){if(b){b(e,f)}})};if(typeof ohnet=="undefined"||!ohnet){var ohnet={}}ohnet.longpolling=function(a,c,d){this.clientId=a;this.proxy=new CpProxyOpenhomeOrgSubscriptionLongPoll1(c);this.pollingStarted=false;var b={debug:false,subscriptionTimeoutSeconds:1800,onReceivePropertyUpdate:null,onReceiveSubscribeCompleted:null,onReceiveRenewCompleted:null,onReceiveError:null,onReceiveSuccess:null};d=ohnet.util.mergeOptions(b,d);this.debug=d.debug;this.subscriptionTimeoutSeconds=d.subscriptionTimeoutSeconds;this.onReceivePropertyUpdate=d.onReceivePropertyUpdate;this.onReceiveSubscribeCompleted=d.onReceiveSubscribeCompleted;this.onReceiveRenewCompleted=d.onReceiveRenewCompleted;this.onReceiveError=d.onReceiveError;this.onReceiveSuccess=d.onReceiveSuccess};ohnet.longpolling.prototype.subscribe=function(c,b){var a=this;this.pollingStarted=false;if(this.debug){console.log(">> Subscribe : No Services: "+b)}var d=c;this.proxy.Subscribe(this.clientId,c.udn,c.serviceName,this.subscriptionTimeoutSeconds,function(e){a.onReceiveSubscribeCompleted(e.Sid,d.udn,d.serviceName,e.Duration);if(b&&!a.pollingStarted){a.pollingStarted=true;a.propertyUpdate();if(a.debug){console.log(">> First Subscription - start polling")}}},function(){if(a.onReceiveError){a.onReceiveError()}})};ohnet.longpolling.prototype.unsubscribe=function(b,a){if(this.debug){console.log(">> Unsubscribe: "+b)}this.proxy.Unsubscribe(b);if(a&&this.pollingStarted){this.pollingStarted=false}};ohnet.longpolling.prototype.renew=function(b){var a=this;if(this.debug){console.log(">> Renew")}this.proxy.Renew(b,this.subscriptionTimeoutSeconds,function(c){a.onReceiveRenewCompleted(b,c.Duration)},function(){if(a.onReceiveError){a.onReceiveError()}})};ohnet.longpolling.prototype.propertyUpdate=function(){var a=this;if(this.debug){console.log(">> Property Update")}if(this.pollingStarted){if(this.debug){console.log(">> GetPropertyUpdates")}this.proxy.GetPropertyUpdates(this.clientId,function(c){if(a.debug){console.log("<< GetPropertyUpdates")}if(a.onReceiveSuccess){a.onReceiveSuccess()}if(window.DOMParser){var b=new DOMParser();var d=b.parseFromString(c.Updates,"text/xml");a.onReceivePropertyUpdate(d)}if(a.pollingStarted){setTimeout(function(){a.propertyUpdate()},10)}},function(){if(a.debug){console.log("Long poll failed, retrying...")}if(a.onReceiveError){a.onReceiveError()}if(a.pollingStarted){setTimeout(function(){a.propertyUpdate()},10)}})}};if(typeof ohnet=="undefined"||!ohnet){var ohnet={}}ohnet.serviceproperty=function(a,b){this.name=a;this.type=b;this.value=null;this.listeners=[]};ohnet.serviceproperty.prototype.setValue=function(a){if(this.value!=a){switch(this.type){case"int":this.value=ohnet.soaprequest.readIntParameter(a);break;case"string":this.value=ohnet.soaprequest.readStringParameter(a);break;case"bool":this.value=ohnet.soaprequest.readBoolParameter(a);break;case"binary":this.value=ohnet.soaprequest.readBinaryParameter(a);break;default:throw"Invalid Property Type: '"+this.type+"'"}}};ohnet.serviceproperty.prototype.reportChanged=function(b){for(var a=this.listeners.length-1;a>-1;a--){this.listeners[a].call(this,b)}};ohnet.serviceproperty.prototype.addListener=function(a){this.listeners[this.listeners.length]=a};if(typeof ohnet=="undefined"||!ohnet){var ohnet={}}ohnet.soaprequest=function(a,d,b,c,e){this.action=a;this.url=d;this.type=c;this.version=e;this.domain=b;this.envelope="";this.writeEnvelopeStart(a)};ohnet.soaprequest.prototype.writeEnvelopeStart=function(){var a='<?xml version="1.0"?><s:Envelope xmlns:s="http://schemas.xmlsoap.org/soap/envelope/"><s:Body s:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"><u:';this.envelope+=a;this.envelope+=this.action;this.envelope+=' xmlns:u="urn:';this.envelope+=this.domain;this.envelope+=":service:";this.envelope+=this.type;this.envelope+=":";this.envelope+=this.version;this.envelope+='">'};ohnet.soaprequest.prototype.writeEnvelopeEnd=function(){this.envelope+="</u:";this.envelope+=this.action;this.envelope+="></s:Body></s:Envelope>"};ohnet.soaprequest.prototype.getSoapAction=function(){var a="urn:";a+=this.domain;a+=":service:";a+=this.type;a+=":";a+=this.version;a+="#";a+=this.action;return a};ohnet.soaprequest.prototype.send=function(c,b){var a=this;this.writeEnvelopeEnd();return this.createAjaxRequest(function(k){if(k.responseXML.getElementsByTagName("faultcode").length>0){b(a.getTransportErrorMessage(k),k)}else{var h=k.responseXML.getElementsByTagNameNS("*",a.action+"Response")[0].childNodes;var j={};for(var e=0,f=h.length;e<f;e++){var g="";var d=h[e].childNodes;if(d.length>0){g=d[0].nodeValue}j[h[e].nodeName]=(g!=""?g:null)}c(j)}},function(d){if(b){b(a.getTransportErrorMessage(d),d)}else{defaultErrorFunction(XMLHttpRequest,errorType,errorThrown)}})};ohnet.soaprequest.prototype.createAjaxRequest=function(c,a){var b=window.XMLHttpRequest?new XMLHttpRequest():new ActiveXObject("Microsoft.XMLHTTP");b.onreadystatechange=function(){if(b.readyState!=4){return}if(b.status==200){if(c){c(b)}}else{if(a){a(b)}}};b.open("POST",this.url,true);b.setRequestHeader("SOAPAction",this.getSoapAction());b.setRequestHeader("Content-type","application/x-www-form-urlencoded");b.send(this.envelope)};ohnet.soaprequest.prototype.defaultErrorFunction=function(c,b,a){console.log("defaultErrorFunction/XMLHttpRequest: "+c);console.log("defaultErrorFunction/textStatus: "+b);console.log("defaultErrorFunction/errorThrown: "+a)};ohnet.soaprequest.prototype.getTransportErrorMessage=function(c){var b="Error:";try{b+="\nstatus: "+c.statusText}catch(a){}if(c&&c.responseXML){if(c.responseXML.getElementsByTagName("faultcode").length){b+="\nfaultcode: "+c.responseXML.getElementsByTagName("faultcode")[0].childNodes[0].nodeValue}if(c.responseXML.getElementsByTagName("faultstring").length){b+="\nfaultstring: "+c.responseXML.getElementsByTagName("faultstring")[0].childNodes[0].nodeValue}if(c.responseXML.getElementsByTagName("errorCode").length){b+="\nerrorCode: "+c.responseXML.getElementsByTagName("errorCode")[0].childNodes[0].nodeValue}if(c.responseXML.getElementsByTagName("errorDescription").length){b+="\nerrorDescription: "+c.responseXML.getElementsByTagName("errorDescription")[0].childNodes[0].nodeValue}}return b};ohnet.soaprequest.readIntParameter=function(a){return a*1};ohnet.soaprequest.readBoolParameter=function(a){return(a=="1"||a=="true"||a=="yes")?true:false};ohnet.soaprequest.readStringParameter=function(a){return a};ohnet.soaprequest.readBinaryParameter=function(a){return atob(a)};ohnet.soaprequest.prototype.writeIntParameter=function(a,b){this.writeParameter(a,""+(b?b:"0"))};ohnet.soaprequest.prototype.writeBoolParameter=function(a,b){this.writeParameter(a,b?"1":"0")};ohnet.soaprequest.prototype.writeStringParameter=function(a,b){this.writeParameter(a,(b?b:""))};ohnet.soaprequest.prototype.writeBinaryParameter=function(a,b){this.writeParameter(a,(b?btoa(b):""))};ohnet.soaprequest.prototype.writeParameter=function(a,b){this.envelope+="<"+a+">"+b.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;")+"</"+a+">"};if(typeof ohnet=="undefined"||!ohnet){var ohnet={}}ohnet.subscriptionmanager=(function(){var f=1800;var L=1;var u=0.7;var e=false;var G=-1;var c="";var b=true;var C,h,g,e,K,I=false,H=0,J=false,M,j;var x={},p=[],o={};var w=false;var A=function(P,Q){var O=x[P];if(O){var N=Q*1000*u;var R=setTimeout(function(){v(P)},N);O.SubscriptionTimer=R;if(e){console.log("setSubscriptionTimeout/actualSubscriptionTimeoutMs:"+N)}}};var z=function(R,O,P){var Q=x[R];if(Q){var N=Q.serviceProperties[O];if(N){N.setValue(P)}}};var s=function(Q,S,P,R){for(var N=0;N<p.length;N++){var O=p[N];if(O.udn==S&&O.serviceName==P){x[Q]=O;x[Q].subscriptionId=Q;p.splice(N,1);var P=x[Q];if(P.serviceAddedFunction){P.serviceAddedFunction();P.serviceAddedFunction=null}if(o[Q]){q(o[Q]);delete o[Q]}}}r(Q,R)};var y=function(R,O,P){var Q=x[R];if(Q){var N=Q.serviceProperties[O];if(N){N.reportChanged(P)}}};var v=function(O){var N=x[O];if(N&&N.SubscriptionTimer){(I)?M.renew(O):j.renew(O)}};var r=function(N,O){if(e){console.log("receiveRenewCompleted - subscriptionId:"+N+" timeout:"+O)}A(N,O)};var q=function(U){var T=U.getElementsByTagNameNS("*","SUBSCRIPTION");for(var N=0;N<T.length;N++){var S=T[N].getElementsByTagNameNS("*","SID")[0].textContent;if(!x[S]){o[S]=U;return}var Q=T[N].getElementsByTagNameNS("*","property");if(Q){for(var O=0;O<Q.length;O++){var R=Q[O].childNodes[0];if(R){z(S,R.tagName,R.textContent);if(e){console.log("receivePropertyUpdate - subscriptionId: "+S+" name: "+R.tagName+" value: "+R.textContent)}}}for(var P=0;P<Q.length;P++){var R=Q[P].childNodes[0];if(R){y(S,R.tagName,R.textContent)}}}}};var m=function(){I=false;console.log("onSocketError")};var l=function(){F();I=false;console.log("onSocketClose");if(J){if(g){g()}}if(J||H<L){H++}else{D()}};var k=function(){console.log("onLongPollClose");F();if(g){g()}};var n=function(){I=true;w=true;J=true;console.log("onSocketOpen");if(C){C()}};var B=function(O){var N={startedFunction:null,port:54321,debugMode:false,subscriptionTimeoutSeconds:f,errorFunction:null,disconnectedFunction:null,allowWebSockets:true,retryInterval:3000};O=ohnet.util.mergeOptions(N,O);b=O.allowWebSockets;c=ohnet.util.generateGUID();C=O.startedFunction;h=O.errorFunction;g=O.disconnectedFunction;e=O.debugMode;K=O.port;RetryInterval=O.retryInterval;G=O.subscriptionTimeoutSeconds;if(e){console.log("*** ohnet.SubscriptionManager ***")}if(O.port&&O.port!=""){var P=("WebSocket" in window);if(P&&b){E("ws://"+window.location.hostname+":"+O.port+"/")}else{D()}}else{if(e){console.log("start/port: NULL")}if(O.errorFunction){O.errorFunction("Connection failed.")}}};var D=function(){if(e){console.log("start/startLongPolling")}j=new ohnet.longpolling(c,nodeUdn,{debug:e,subscriptionTimeoutSeconds:f,onReceivePropertyUpdate:q,onReceiveSubscribeCompleted:s,onReceiveRenewCompleted:r,onReceiveError:k});w=true;if(C){C()}};var E=function(N){if(e){console.log("start/startWebSocket: "+N)}M=new ohnet.websocket(c,N,{debug:e,subscriptionTimeoutSeconds:f,onSocketError:m,onSocketClose:l,onSocketOpen:n,onReceivePropertyUpdate:q,onReceiveSubscribeCompleted:s,onReceiveRenewCompleted:r})};var F=function(){for(var N in x){if(x.hasOwnProperty(N)){t(N)}}if(I){M.close()}};var d=function(){var O=0;for(var N in x){if(x.hasOwnProperty(N)){O++}}return O};var a=function(N,O){if(w){p.push(N);if(O){N.serviceAddedFunction=O}(I)?M.subscribe(N):j.subscribe(N,d()==0)}else{if(e){console.log("addService/running: false")}console.log("Subscription Manager is not running.  Please ensure 'ohnet.subscriptionmanager.start();' has been called prior to subscribing.")}};var t=function(O){var N=x[O];if(N){delete x[O];(I)?M.unsubscribe(O):j.unsubscribe(O,d()==0);if(N.SubscriptionTimer){clearTimeout(N.SubscriptionTimer)}}};var i=function(){return I};return{running:w,start:B,stop:F,addService:a,removeService:t}})();if(typeof ohnet=="undefined"||!ohnet){var ohnet={}}if(typeof ohnet.util=="undefined"||!ohnet.util){ohnet.util={}}ohnet.util.generateGUID=function(){var a="xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(b){var d=Math.random()*16|0,e=b=="x"?d:(d&3|8);return e.toString(16)});return a};ohnet.util.mergeOptions=function(b,d){var c={};for(var a in b){c[a]=b[a]}for(var a in d){c[a]=d[a]}return c};if(typeof ohnet=="undefined"||!ohnet){var ohnet={}}ohnet.websocket=function(b,e,d){var a=this;this.clientId=b;this.socket=new WebSocket(e,"upnpevent.openhome.org");var c={debug:false,subscriptionTimeoutSeconds:1800,onSocketError:null,onSocketClose:null,onSocketOpen:null,onReceivePropertyUpdate:null,onReceiveSubscribeCompleted:null,onReceiveRenewCompleted:null};d=ohnet.util.mergeOptions(c,d);this.debug=d.debug;this.subscriptionTimeoutSeconds=d.subscriptionTimeoutSeconds;this.socket.onerror=d.onSocketError;this.socket.onclose=d.onSocketClose;this.socket.onopen=d.onSocketOpen;this.socket.onmessage=function(){if(a.debug){console.log("<< "+event.data)}a.receiveMessage(event.data)};this.onReceivePropertyUpdate=d.onReceivePropertyUpdate;this.onReceiveSubscribeCompleted=d.onReceiveSubscribeCompleted;this.onReceiveRenewCompleted=d.onReceiveRenewCompleted};ohnet.websocket.prototype.subscribe=function(a){this.sendMessage(this.subscribeMessage(a))};ohnet.websocket.prototype.unsubscribe=function(a){this.sendMessage(this.unsubscribeMessage(a))};ohnet.websocket.prototype.renew=function(a){this.sendMessage(this.renewMessage(a))};ohnet.websocket.prototype.close=function(){this.socket.close()};ohnet.websocket.prototype.sendMessage=function(a){if(this.debug){console.log(">> "+a)}this.socket.send(a)};ohnet.websocket.prototype.receiveMessage=function(a){if(window.DOMParser){parser=new DOMParser();xmlDoc=parser.parseFromString(a,"text/xml");var c=xmlDoc.getElementsByTagNameNS("*","METHOD");var b=c[0].textContent;var g=xmlDoc.getElementsByTagNameNS("*","SID");var f=g[0].textContent;if(b=="PropertyUpdate"){this.onReceivePropertyUpdate(xmlDoc)}else{if(b=="SubscribeCompleted"){var k=xmlDoc.getElementsByTagNameNS("*","UDN");var j=k[0].textContent;var e=xmlDoc.getElementsByTagNameNS("*","SERVICE");var d=e[0].textContent;var i=xmlDoc.getElementsByTagNameNS("*","TIMEOUT");var h=i[0].textContent;this.onReceiveSubscribeCompleted(f,j,d,h)}else{if(b=="RenewCompleted"){this.onReceiveRenewCompleted(f,xmlDoc)}}}}else{console.log("ohnet.SubscriptionManager: Cannot parse subscription message as browser does not support it.")}};ohnet.websocket.prototype.subscribeMessage=function(b){var a="<?xml verison='1.0' ?>";a+="<ROOT>";a+="<METHOD>Subscribe</METHOD>";a+="<CLIENTID>"+this.clientId+"</CLIENTID>";a+="<UDN>"+b.udn+"</UDN>";a+="<SERVICE>"+b.serviceName+"</SERVICE>";a+="<NT>upnp:event</NT>";a+="<TIMEOUT>"+this.subscriptionTimeoutSeconds+"</TIMEOUT>";a+="</ROOT>";return a};ohnet.websocket.prototype.unsubscribeMessage=function(b){var a="<?xml verison='1.0' ?>";a+="<ROOT>";a+="<METHOD>Unsubscribe</METHOD>";a+="<SID>"+b+"</SID>";a+="<CLIENTID>"+this.clientId+"</SID>";a+="</ROOT>";return a};ohnet.websocket.prototype.renewMessage=function(b){var a="<?xml verison='1.0' ?>";a+="<ROOT>";a+="<METHOD>Renew</METHOD>";a+="<SID>"+b+"</SID>";a+="<TIMEOUT>"+this.subscriptionTimeoutSeconds+"</TIMEOUT>";a+="</ROOT>";return a};ohnet.websocket.prototype.getPropertyUpdatesMessage=function(){var a="<?xml verison='1.0' ?>";a+="<ROOT>";a+="<CLIENTID>"+this.clientId+"</CLIENTID>";a+="</ROOT>";return a};