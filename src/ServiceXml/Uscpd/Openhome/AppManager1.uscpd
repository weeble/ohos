# Information about all installed apps.
# <appList>
#     <app>
#         <handle>3</handle>
#         <id>ohwidget</id>
#         <name>OpenHome Widget Control</name>
#         <version>1.2.3</version>
#         <url>https://www.openhome.org/path/to/app.zip</url>
#         <description>This is an example app for controlling widgets in the home.</description>
#         <status>running</status>
#         <updateStatus>downloading</updateStatus>
#     </app>
# </appList>
#
# handle is always present, and identifies a handle from AppHandleArray.
# id is present except for new downloads.
# name is present except for new downloads.
# version is present only for running apps.
# url may not be present for permanently installed apps.
# description is present only for running apps.
# <status> can be one of:
#     running      : Currently running.
#     stopped      : Not running.
#     broken       : Not running, something is broken. (Maybe it throws on startup.)
# <updateStatus> can be one of:
#     noUpdate     : No update is known to be available.
#     available    : An update is available for download.
#     downloading  : An update is downloading.
#     installing   : An update was applied and the app will soon be running.
type $AppListXml : string;

# Status of all downloads.
# <downloadList>
#     <download>
#          <status>downloading</status>
#          <url>http://foo.bar.baz/app-erture</url>
#          <appId>apperture</appId>
#          <appHandle>3</appHandle>
#          <progressPercent>77</progressPercent>
#          <progressBytes>7700</progressBytes>
#          <totalBytes>10000</totalBytes>
#     </download>
#     <download>
#          <status>downloading</status>
#          <url>http://foo.bar.baz/app-titude</url>
#          <appId>apptitude</appId>
#          <appHandle>4</appHandle>
#          <progressBytes>4789</progressBytes>
#     </download>
#     <download>
#          <status>downloading</status>
#          <url>http://foo.bar.baz/app-titude</url>
#          <progressPercent>33</progressPercent>
#          <progressBytes>3300</progressBytes>
#          <totalBytes>10000</totalBytes>
#     </download>
#     <download>
#          <status>failed</status>
#          <url>http://foo.bar.baz/app-titude</url>
#     </download>
# </downloadList>
#
# Notes:
#     * <url> will always be present.
#     * <status> will always be present, can be "downloading" or "failed" (any others?)
#     * <appId> and <appHandle> are optional, and appear together when the download is
#       an upgrade for an existing app.
#     * <progressPercent> and <totalBytes> are optional, and only appear when the
#       download is in progress and the server provides a Content-Length.
#     * <progressBytes> is optional, and only appears when the download is in progress.
type $DownloadStatusXml : string;

# The URL to download an app from.
type $AppURL : uri;

# A handle to uniquely identify a locally installed app.
type $AppHandle : ui4;

# The permissions required by and granted to an app.
# <appPermissions id="ohwidget">
#     <required>
#         <permission>root</permission>
#     </required>
#     <granted>
#     </granted>
# </appPermissions>
type $AppPermissionsXml : string;

type $AppManagerPresentationUri : uri;


# EVENTED STATE VARIABLES

# Array of 32-bit unsigned integer handles. Network-endian.
var AppHandleArray : bin.base64;

# Array of 32-bit unsigned integer sequence numbers. Network-endian.
# These are incremented whenever an app's status changes.
var AppSequenceNumberArray : bin.base64;

# The number of downloads currently in progress.
var DownloadCount : ui4;


# ACTIONS

# Get the status of a single app. Returns appList XML with zero or one entries.
action GetAppStatus(AppHandle : in $AppHandle) = AppListXml : $AppListXml;

# Get the status of all downloads.
action GetAllDownloadsStatus() = DownloadStatusXml : $DownloadStatusXml;

# Get the status of multiple apps at once.
# AppHandles should be a binary encoded array of 32-bit big-endian unsigned integers.
# Each is one app handle to query. If the provided array is empty, XML for all apps
# is returned. If some of the app handles do not correspond to apps they will be omitted
# from the XML.
action GetMultipleAppsStatus(AppHandles : in AppHandleArray) = AppListXml : $AppListXml;

# Download an app from the supplied URL, then install it.
action InstallAppFromUrl(AppURL : in $AppURL);

# Download and install an update for an app.
action UpdateApp(AppHandle : in $AppHandle);

# Uninstall the specified app.
action RemoveApp(AppHandle : in $AppHandle);

# Cancel a download.
action CancelDownload(AppURL : in $AppURL);

# Find the URI for the presentation page. May be a relative URI, if so, it is
# relative to the base URI of this device.
action GetPresentationUri() = AppManagerPresentationUri : $AppManagerPresentationUri;
